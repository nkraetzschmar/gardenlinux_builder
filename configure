#!/usr/bin/env bash

set -eufo pipefail

while [ $# -gt 0 ]; do
	case "$1" in
		--arch)
			arch="$2"
			shift 2
			;;
		*)
			break
			;;
	esac
done

IFS=',' read -r -a features <<< "$1"
printf '%s\n' "${features[@]}"

for feature in "${features[@]}"; do
	[ ! -e "/builder/features/$feature/exec.pre" ] || "/builder/features/$feature/exec.pre"
done

pkg_include="$(mktemp)"
pkg_exclude="$(mktemp)"

for feature in "${features[@]}"; do
	[ ! -e "/builder/features/$feature/pkg.include" ] || cat "/builder/features/$feature/pkg.include" >> "$pkg_include" && echo >> "$pkg_include"
	[ ! -e "/builder/features/$feature/pkg.exclude" ] || cat "/builder/features/$feature/pkg.exclude" >> "$pkg_exclude" && echo >> "$pkg_include"
done

dir="$(mktemp -d)"

pkg_include_processed="$(mktemp)"
(
	cd "$dir"
	PATH=""
	set -r
	while read -r line; do
		eval "echo $line"
	done
) < "$pkg_include" | sort > "$pkg_include_processed"
rm "$pkg_include"

pkg_exclude_processed="$(mktemp)"
(
	cd "$dir"
	PATH=""
	set -r
	while read -r line; do
		eval "echo $line"
	done
) < "$pkg_exclude" | sort > "$pkg_exclude_processed"
rm "$pkg_exclude"

rmdir "$dir"

pkg_list="$(mktemp)"
comm -2 -3 "$pkg_include_processed" "$pkg_exclude_processed" > "$pkg_list"
rm "$pkg_include_processed" "$pkg_exclude_processed"

cat "$pkg_list"

INITRD=No DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends $(cat "$pkg_list")
rm "$pkg_list"
