name: build
on: push
jobs:
  base:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: setup runner
        uses: ./.github/actions/setup
      - name: build
        run: make TMPDIR=/mnt base-amd64-today base-arm64-today
      - name: list build artifacts
        run: ls -lah .build/
      - name: cache
        uses: actions/cache/save@v3
        with:
          path: .build
          key: base-${{ github.run_id }}-${{ github.run_attempt }}
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
        cname: [ kvm, metal, aws, gcp, azure ]
    needs: base
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: setup runner
        uses: ./.github/actions/setup
      - name: cache
        uses: actions/cache/restore@v3
        with:
          path: .build
          key: base-${{ github.run_id }}-${{ github.run_attempt }}
      - name: update cache timestamps
        run: |
          t="$(date '+%s')"
          find .build -exec touch -d "@$t" {} +
      - name: build
        run: make TMPDIR=/mnt ${{ matrix.cname }}-${{ matrix.arch }}-today
      - name: list build artifacts
        run: ls -lah .build/
      - name: pack build artifacts
        run: |
          artifact="${{ matrix.cname }}-${{ matrix.arch }}-today"
          commit="$(git rev-parse --short HEAD)"
          cname="$artifact-$commit"
          mkdir "$cname"
          cat ".build/$artifact.artifacts" | while read -r file; do
            extension="$(sed "s/^$artifact//" <<< "$file")"
            mv ".build/$file" "$cname/$cname$extension"
            mv ".build/$file.log" "$cname/$cname$extension.log"
          done
          tar --create "$cname" | zstd > "$cname.tar.zstd"
          echo "artifact=$cname.tar.zstd" >> "$GITHUB_ENV"
      - name: upload bulid artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact }}
          path: ${{ env.artifact }}
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: setup runner
        uses: ./.github/actions/setup
      - name: build
        run: make TMPDIR=/mnt CONTAINER_ENGINE=docker base
      - name: list build artifacts
        run: ls -lah .build/
  # build-debian:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - name: setup runner
  #       uses: ./.github/actions/setup
  #     - name: build
  #       run: make -j $(nproc) --output-sync TMPDIR=/mnt REPO=http://deb.debian.org/debian base
  #     - name: list build artifacts
  #       run: ls -lah .build/
